New Blog Entry

Been a couple of days since I last wrote. Not a whole lot has gone on that I'm very proud of in terms of my work and hobbies. I turned in some pretty cool pieces of analyses today that indirectly measures how effective certain leaders are at promoting and leading their recruits. It was amazing to see that the top leaders weren't well known managers who had been around the business since the beginning, but managers who had worked hard consistently over the last several years to build a company that reflected their strengths. Or at least I'm assuming that's what it was, I want to talk with them and find out what they're doing differently. I'm hoping my analysis isn't bad and that there's nothing particularly special about these people. But we'll see.

Something I am proud of. I wrote a FileParser today and a little bit on Wednesday that takes a text file turns it into a string object then parses it by line character into a large list of lines and then parse each list by its deliniator and then processes each item in each line and if it is numeric, changes the type from a string to the appropriate format either int or float. Next I want to have it handle datetimes, but that's further down the road. Since I was able to create numeric values I encapsulated the FileParser and added methods to calculate basic statistics off of the file. I then tested it by running a 40MB raw file through it with nearly a million lines and it handled it faster than you could do it in Excel. It was pretty neat, obviously my little script is like a prepubscent middle schooler with a basketball trying to play hoops against an entire National Football League defense. It's not really comparing apples to oranges and while I might score, I'll do little else the rest of the game. My new objective with it is to build it so its hashable. I think I'll need to work on the methods before I can do anything besides run the function however many times that value comes up. I'll also have to write into the program to check if the key already exists and if it does, don't compute. So my little parser will need to check each value and add up the ones with the correct keys. Maybe I'll check if the key exists, if it does, I'll add to the value (or change it in whatever way) and then I'll move onto the next piece of the pie. Ugh, I'll need to completely rewrite those methods then to interact only with specified values. Maybe I'll even create another class that just grabs and holds the data while the other class uses it for calculation. Then I need to figure out how I'm differentiating the groups and allow the program to automatically find and expect that. How would I do that? Every line of data is unique is some way. There are two general types of columns, keys and values. How do you determine what is and isn't a key? a key that is broken up amoung many pieces will repeat itself but not when combined with the other information on the line. I'll have to think on this one because there might be data points that aren't keys but look like them. There must be other intuitive ways to recognize what is a key.

New Challenge: defining a key so that a computer can intuititively recognize it. Interesting thought experiement.

And I'm done for now. nap time.